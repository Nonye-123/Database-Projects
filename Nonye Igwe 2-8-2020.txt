Week 5 Assignment

--Scaler Function

SELECT UPPER(ProductName) AS ProductName
FROM dbo.[Sales.Product];

SELECT CONCAT(FirstName + ' ', LastName) AS FullName
FROM dbo.[Sales.Customer];

SELECT ProductName, SUBSTRING(ProductNumber, CHARINDEX('-', ProductNumber) + 1, 3) AS ModelCode
FROM dbo.[Sales.Product];

--Logical Function

SELECT ProductName, IIF(ProductCategoryID = 3, 'Winter', 'Other') ProductType
FROM dbo.[Sales.Product]
ORDER BY ProductType DESC;

SELECT ProductName, IIF(Size = 'S', 'Small', 'Other') SizeName
FROM dbo.[Sales.Product]
ORDER BY SizeName DESC;

SELECT ProductName, IIF(ISNUMERIC(Size) = 0, 'Non-Numeric', 'Numeric') SizeType
FROM dbo.[Sales.Product];

--Window Function

SELECT TOP(10) ProductNumber, ProductName, ListPrice,
RANK() OVER(ORDER BY ListPrice DESC) AS RankByPrice
FROM dbo.[Sales.Product]
ORDER BY RankByPrice;

SELECT c.Name AS Category, p.ProductName, ListPrice,
RANK() OVER(PARTITION BY c.Name ORDER BY ListPrice DESC) AS RankByPrice
FROM dbo.[Sales.Product] AS p
JOIN dbo.[Sales.ProductCategory] AS c
ON p.ProductCategoryID = c.ProductcategoryID
ORDER BY Category, RankByPrice;

SELECT e.EmployeeName AS SalesPerson, CONCAT(c.FirstName + ' ', LastName) AS CustomerName, p.ProductNumber, p.ListPrice,
RANK() OVER(PARTITION BY e.EmployeeName ORDER BY ListPrice DESC) AS RankByPrice
FROM dbo.[Sales.Employee] AS e
JOIN dbo.[Sales.Customer] AS c
ON e.EmployeeID = c.SalesPersonEmployeeID
JOIN dbo.[Sales.Product] AS p
ON c.ProductNumber = p.ProductNumber
ORDER BY SalesPerson, RankByPrice;

--Aggregate Function

SELECT COUNT(*) AS Products, COUNT(DISTINCT ProductCategoryID) AS Categories, AVG(ListPrice) AS AveragePrice
FROM dbo.[Sales.Product];

SELECT COUNT(*) AS Employees, COUNT(DISTINCT ManagerID) AS Managers
FROM dbo.[Sales.Employee];

SELECT COUNT(p.ProductNumber) Winter, AVG(p.ListPrice) AveragePrice
FROM dbo.[Sales.Product] AS p
JOIN dbo.[Sales.ProductCategory] AS c
ON p.ProductCategoryID = c.ProductCategoryID
WHERE c.Name = 'Winter';

--Group by Function

SELECT e.EmployeeName AS SalesPerson, COUNT(c.CustomerID) Customers
FROM dbo.[Sales.Employee] AS e
JOIN dbo.[Sales.Customer] AS c
ON e.EmployeeID = c.SalesPersonEmployeeID
GROUP BY EmployeeName
ORDER BY SalesPerson;

SELECT c.Name AS Category, COUNT(p.ProductNumber) AS Products
FROM dbo.[Sales.Product] AS p
JOIN dbo.[Sales.ProductCategory] AS c
ON p.ProductCategoryID = c.ProductCategoryID
GROUP BY c.Name
ORDER BY Category;

SELECT e.EmployeeName AS SalesPerson, SUM(p.ListPrice) SalesRevenue
FROM dbo.[Sales.Employee] AS e
JOIN dbo.[Sales.Customer] AS c
ON e.EmployeeID = c.SalesPersonEmployeeID
JOIN dbo.[Sales.Product] AS p
ON c.ProductNumber = p.ProductNumber
GROUP BY e.EmployeeName
ORDER BY SalesRevenue DESC;

--Having Function

SELECT e.EmployeeName AS SalesPerson, COUNT(c.CustomerID) Customers
FROM dbo.[Sales.Employee] AS e
JOIN dbo.[Sales.Customer] AS c
ON e.EmployeeID = c.SalesPersonEmployeeID
GROUP BY EmployeeName
HAVING COUNT(c.CustomerID) > = 2
ORDER BY SalesPerson;

SELECT c.Name AS Category, COUNT(p.ProductNumber) AS Products
FROM dbo.[Sales.Product] AS p
JOIN dbo.[Sales.ProductCategory] AS c
ON p.ProductCategoryID = c.ProductCategoryID
GROUP BY c.Name
HAVING COUNT(p.ProductNumber) < 3
ORDER BY Category;

SELECT e.EmployeeName AS SalesPerson, SUM(p.ListPrice) SalesRevenue
FROM dbo.[Sales.Employee] AS e
JOIN dbo.[Sales.Customer] AS c
ON e.EmployeeID = c.SalesPersonEmployeeID
JOIN dbo.[Sales.Product] AS p
ON c.ProductNumber = p.ProductNumber
GROUP BY e.EmployeeName
HAVING SUM(p.ListPrice) > 50
ORDER BY SalesRevenue DESC;







